{"ast":null,"code":"var _jsxFileName = \"/home/evan/nodeAPI/mongoFrontEnd/mongo-front-end/src/Screens/PostingScreen/PostingScreen.js\";\nimport React, { Component } from \"react\";\nimport PostBox from \"../../Components/PostBox\";\nimport './PostingScreenStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class PostingScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.postModel = {\n      title: '',\n      description: ''\n    };\n    this.state = {\n      loading: true,\n      posts: null,\n      titleInput: '',\n      descInput: ''\n    };\n    this.getPosts = this.getPosts.bind(this);\n    this.handleDescriptionInputChange = this.handleDescriptionInputChange.bind(this);\n    this.handleTitleInputChange = this.handleTitleInputChange.bind(this);\n    this.submitNewPost = this.submitNewPost.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pageBox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"newPostInputForm\",\n          onSubmit: this.submitNewPost,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Title\",\n            onChange: this.handleTitleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Description\",\n            onChange: this.handleDescriptionInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), !this.state.posts && this.state.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"loading\"\n        }, void 0, false) : this.state.posts.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(PostBox, {\n            title: val.title,\n            description: val.description\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n  async getPosts() {\n    this.setState({\n      loading: true\n    });\n    fetch('http://localhost:5001/posts').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        posts: data,\n        loading: false\n      });\n    });\n  }\n\n  handleTitleInputChange(event) {\n    this.setState({\n      titleInput: event.target.value\n    });\n  }\n\n  handleDescriptionInputChange(event) {\n    this.setState({\n      descInput: event.target.value\n    });\n  } // submitNewPost(e){\n  //     e.preventDefault();\n  //     fetch('http://localhost:5001/posts', {\n  //         method: 'POST',\n  //         mode: 'no-cors',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: {\n  //             'title': this.state.titleInput,\n  //             'description': this.state.descInput\n  //         }\n  //     }).then(()=>{\n  //         this.getPosts();\n  //     })\n  //     console.log(this.state.titleInput, this.state.descInput);\n  // }\n\n\n  async submitNewPost(e) {\n    e.preventDefault(); // Default options are marked with *\n\n    const response = await fetch('http://localhost:5001/posts', {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'no-cors',\n      // no-cors, *cors, same-origin\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: \"hello\"\n    });\n    console.log(response);\n  }\n\n}","map":{"version":3,"names":["React","Component","PostBox","PostingScreen","constructor","props","postModel","title","description","state","loading","posts","titleInput","descInput","getPosts","bind","handleDescriptionInputChange","handleTitleInputChange","submitNewPost","componentDidMount","componentWillUnmount","render","map","val","key","setState","fetch","then","res","json","data","console","log","event","target","value","e","preventDefault","response","method","mode","headers","body"],"sources":["/home/evan/nodeAPI/mongoFrontEnd/mongo-front-end/src/Screens/PostingScreen/PostingScreen.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PostBox from \"../../Components/PostBox\";\nimport './PostingScreenStyle.css';\n\nexport default class PostingScreen extends Component{\n\n    postModel = {\n        title: '',\n        description: ''\n    }\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: true,\n            posts: null,\n            titleInput: '',\n            descInput: ''\n        }\n\n        this.getPosts = this.getPosts.bind(this);\n        this.handleDescriptionInputChange = this.handleDescriptionInputChange.bind(this);\n        this.handleTitleInputChange = this.handleTitleInputChange.bind(this);\n        this.submitNewPost = this.submitNewPost.bind(this);\n    }\n\n    componentDidMount(){\n        this.getPosts();\n    }\n\n    componentWillUnmount(){\n\n    }\n\n    render(){\n        return(\n            <div id=\"pageBox\">\n                <div>\n\n                    <form id=\"newPostInputForm\" onSubmit={this.submitNewPost}>\n                        <input placeholder=\"Title\" onChange={this.handleTitleInputChange}>\n\n                        </input>\n                        <input placeholder=\"Description\" onChange={this.handleDescriptionInputChange}>\n\n                        </input>\n                        <button type=\"submit\">submit</button>\n                    </form>\n\n                    {\n                        !this.state.posts && this.state.loading ? (<>loading</>) : (\n                            this.state.posts.map((val, key) => {\n                                return (\n                                    <PostBox title={val.title} description={val.description} key={key}></PostBox>\n                                );\n                            })\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    async getPosts(){\n        this.setState({\n            loading: true\n        })\n        fetch('http://localhost:5001/posts').then(\n            (res) =>{\n                return res.json()\n            }).then(\n                (data)=>{\n                    console.log(data);\n                    this.setState({\n                        posts: data,\n                        loading: false\n                    });\n                }\n            );\n    }\n\n    handleTitleInputChange(event){\n        this.setState({titleInput: event.target.value});\n    }\n\n    handleDescriptionInputChange(event){\n        this.setState({descInput: event.target.value});\n    }\n\n    // submitNewPost(e){\n    //     e.preventDefault();\n\n    //     fetch('http://localhost:5001/posts', {\n    //         method: 'POST',\n    //         mode: 'no-cors',\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: {\n    //             'title': this.state.titleInput,\n    //             'description': this.state.descInput\n    //         }\n    //     }).then(()=>{\n    //         this.getPosts();\n    //     })\n\n    //     console.log(this.state.titleInput, this.state.descInput);\n    // }\n\n    async submitNewPost(e) {\n        e.preventDefault();\n        // Default options are marked with *\n        const response = await fetch('http://localhost:5001/posts', {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'no-cors', // no-cors, *cors, same-origin\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: \"hello\"\n        });\n        console.log(response);\n      }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}