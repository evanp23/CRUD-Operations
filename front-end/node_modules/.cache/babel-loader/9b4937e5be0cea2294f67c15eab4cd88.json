{"ast":null,"code":"var _jsxFileName = \"/home/evan/nodeAPI/mongoFrontEnd/mongo-front-end/src/Components/PostBox.js\";\nimport { Component } from \"react\";\nimport './PostBoxStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class PostBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      editButtonText: \"edit\",\n      updatedTitle: '',\n      updatedDescription: ''\n    };\n    this.deletePost = this.deletePost.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.updateDescription = this.updateDescription.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      updatedTitle: this.props.post.title,\n      updatedDescription: this.props.post.description\n    });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postOuterDiv\",\n      children: [this.state.editing ? /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"editingForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.updatedTitle,\n          id: \"editingTitleInput\",\n          onChange: this.updateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.updatedDescription,\n          id: \"editingDescInput\",\n          onChange: this.updateDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.props.post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleEditClick,\n        children: this.state.editButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), this.state.editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.updatePost,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.deletePost,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  async deletePost(e) {\n    e.preventDefault(); // Default options are marked with *\n\n    const response = await fetch(\"http://localhost:5001/posts/\" + this.props.post._id, {\n      method: 'DELETE',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(response);\n    this.props.get();\n  }\n\n  handleEditClick() {\n    var editText = '';\n    this.state.editButtonText === \"edit\" ? editText = \"cancel\" : editText = \"edit\";\n    this.setState({\n      editing: !this.state.editing,\n      editButtonText: editText\n    });\n  }\n\n  updateTitle(e) {\n    this.setState({\n      updatedTitle: e.target.value\n    });\n  }\n\n  updateDescription(e) {\n    this.setState({\n      updatedDescription: e.target.value\n    });\n  }\n\n  async updatePost() {\n    const response = await fetch(\"http://localhost:5001/posts/\" + this.props.post._id, {\n      method: 'PATCH',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"title\": this.state.updatedTitle,\n        \"description\": this.state.updatedDescription\n      })\n    });\n    console.log(response);\n    this.setState({\n      editing: false,\n      editButtonText: \"edit\"\n    });\n    this.props.get();\n  }\n\n}","map":{"version":3,"names":["Component","PostBox","constructor","props","state","editing","editButtonText","updatedTitle","updatedDescription","deletePost","bind","handleEditClick","updateTitle","updatePost","updateDescription","componentDidMount","setState","post","title","description","componentWillUnmount","render","e","preventDefault","response","fetch","_id","method","mode","headers","console","log","get","editText","target","value","body","JSON","stringify"],"sources":["/home/evan/nodeAPI/mongoFrontEnd/mongo-front-end/src/Components/PostBox.js"],"sourcesContent":["import { Component } from \"react\";\nimport './PostBoxStyle.css';\n\nexport default class PostBox extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            editing: false,\n            editButtonText: \"edit\",\n            updatedTitle: '',\n            updatedDescription: '',\n        }\n\n        this.deletePost = this.deletePost.bind(this);\n        this.handleEditClick = this.handleEditClick.bind(this);\n        this.updateTitle = this.updateTitle.bind(this);\n        this.updatePost = this.updatePost.bind(this);\n        this.updateDescription = this.updateDescription.bind(this);\n    }\n\n    componentDidMount(){\n        this.setState({updatedTitle: this.props.post.title, updatedDescription: this.props.post.description});\n    }\n\n    componentWillUnmount(){\n\n    }\n\n    render(){\n        return(\n            <div id=\"postOuterDiv\">\n                {this.state.editing ? (\n                    <form id=\"editingForm\">\n                        <input type=\"text\" value={this.state.updatedTitle} id=\"editingTitleInput\" onChange={this.updateTitle}>\n                        </input>\n                        <input type=\"text\" value={this.state.updatedDescription} id=\"editingDescInput\" onChange={this.updateDescription}>\n                        </input>\n                    </form>\n                ) : (\n                    <>\n                        <h2>\n                            {this.props.post.title}\n                        </h2>\n                        <p>\n                            {this.props.post.description}\n                        </p>\n                    </>\n                )}\n                <button onClick={this.handleEditClick}>\n                    {this.state.editButtonText}\n                </button>\n                {this.state.editing ? (\n                    <button onClick={this.updatePost}>\n                        submit\n                    </button>\n                ) : (\n                    <button onClick={this.deletePost}>\n                        delete\n                    </button>\n                )}\n            </div>\n        );\n    }\n\n    async deletePost(e){\n        e.preventDefault();\n        // Default options are marked with *\n        const response = await fetch((\"http://localhost:5001/posts/\" + this.props.post._id), {\n          method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(response);\n        this.props.get();\n    }\n\n    handleEditClick(){\n        var editText = '';\n        this.state.editButtonText === \"edit\" ? editText = \"cancel\" : editText = \"edit\";\n        this.setState({\n            editing: !this.state.editing,\n            editButtonText: editText\n        });\n    }\n\n    updateTitle(e){\n        this.setState({\n            updatedTitle: e.target.value\n        })\n    }\n\n    updateDescription(e){\n        this.setState({\n            updatedDescription: e.target.value\n        })\n    }\n\n    async updatePost(){\n        const response = await fetch((\"http://localhost:5001/posts/\" + this.props.post._id), {\n          method: 'PATCH',\n          mode: 'cors',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"title\": this.state.updatedTitle,\n            \"description\": this.state.updatedDescription\n          })\n        });\n        console.log(response);\n        this.setState({editing: false, editButtonText: \"edit\"})\n        this.props.get();\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}